<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.megagao.production.ssm.mapper.MaterialMapper" >
  <resultMap id="BaseResultMap" type="com.megagao.production.ssm.domain.Material" >
    <id column="material_id" property="materialId" jdbcType="VARCHAR" />
    <result column="material_type" property="materialType" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="remaining" property="remaining" jdbcType="INTEGER" />
    <result column="note" property="note" jdbcType="VARCHAR" />
  </resultMap>
  
  <!-- 扩展的sql -->
  <!-- 批量删除 -->
	<delete id="deleteBatch">
		DELETE
		FROM
			material
		WHERE
			material_id IN
		<foreach collection="array" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</delete>

<!-- 修改状态，批量启用停用-->
	<update id="changeStatus">
		UPDATE material
		SET status = #{status}
		WHERE
			material_id IN
		<foreach collection="ids" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</update>
	
	<!-- 修改备注-->
	<update id="updateNote" parameterType="com.megagao.production.ssm.domain.Material" >
		UPDATE material
		SET note = #{note}
		WHERE
			material_id = #{materialId,jdbcType=VARCHAR}
	</update>
    
    <select id="searchMaterialByMaterialId" parameterType="string" resultMap="BaseResultMap">
       SELECT
			*
		FROM
			material
		WHERE
			material_id LIKE CONCAT(
				'%',
				#{materialId},'%' ) 
    </select>
    
    <select id="searchMaterialByMaterialType" parameterType="string" resultMap="BaseResultMap">
    	SELECT
			*
		FROM
			material
		WHERE
			material_type LIKE CONCAT(
				'%',
				#{materialType},'%' ) 
    </select>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    material_id, material_type, status, remaining, note
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.megagao.production.ssm.domain.MaterialExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from material
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from material
    where material_id = #{materialId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from material
    where material_id = #{materialId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.megagao.production.ssm.domain.MaterialExample" >
    delete from material
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.megagao.production.ssm.domain.Material" >
    insert into material (material_id, material_type, status, 
      remaining, note)
    values (#{materialId,jdbcType=VARCHAR}, #{materialType,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{remaining,jdbcType=INTEGER}, #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.megagao.production.ssm.domain.Material" >
    insert into material
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="materialId != null" >
        material_id,
      </if>
      <if test="materialType != null" >
        material_type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="remaining != null" >
        remaining,
      </if>
      <if test="note != null" >
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="materialId != null" >
        #{materialId,jdbcType=VARCHAR},
      </if>
      <if test="materialType != null" >
        #{materialType,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="remaining != null" >
        #{remaining,jdbcType=INTEGER},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.megagao.production.ssm.domain.MaterialExample" resultType="java.lang.Integer" >
    select count(*) from material
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update material
    <set >
      <if test="record.materialId != null" >
        material_id = #{record.materialId,jdbcType=VARCHAR},
      </if>
      <if test="record.materialType != null" >
        material_type = #{record.materialType,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.remaining != null" >
        remaining = #{record.remaining,jdbcType=INTEGER},
      </if>
      <if test="record.note != null" >
        note = #{record.note,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update material
    set material_id = #{record.materialId,jdbcType=VARCHAR},
      material_type = #{record.materialType,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      remaining = #{record.remaining,jdbcType=INTEGER},
      note = #{record.note,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.megagao.production.ssm.domain.Material" >
    update material
    <set >
      <if test="materialType != null" >
        material_type = #{materialType,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="remaining != null" >
        remaining = #{remaining,jdbcType=INTEGER},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where material_id = #{materialId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.megagao.production.ssm.domain.Material" >
    update material
    set material_type = #{materialType,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      remaining = #{remaining,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR}
    where material_id = #{materialId,jdbcType=VARCHAR}
  </update>
</mapper>