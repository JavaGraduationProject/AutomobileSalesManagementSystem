<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.megagao.production.ssm.mapper.MaterialReceiveMapper" >
  <resultMap id="BaseResultMap" type="com.megagao.production.ssm.domain.vo.MaterialReceiveVO" >
    <id column="receive_id" property="receiveId" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="INTEGER" />
    <result column="receive_date" property="receiveDate" jdbcType="TIMESTAMP" />
    <result column="sender" property="sender" jdbcType="VARCHAR" />
    <result column="receiver" property="receiver" jdbcType="VARCHAR" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <association property="material" javaType="material">
		<id column="material_id" property="materialId" jdbcType="VARCHAR" />
	    <result column="material_type" property="materialType" jdbcType="VARCHAR" />
	    <result column="status" property="status" jdbcType="VARCHAR" />
	    <result column="remaining" property="remaining" jdbcType="INTEGER" />
	    <result column="note" property="note" jdbcType="VARCHAR" />
	</association>
  </resultMap>
  
  <!-- 扩展的sql -->
  <!-- 查询所有记录 -->
	<select id="find" parameterType="MaterialReceive" resultMap="BaseResultMap">
		SELECT
		    receive_id,
            amount,
		    receive_date,
		    sender,
		    receiver,
		    material_receive.note,
			material.material_id
		FROM
			material_receive
		LEFT JOIN material ON
			material.material_id=material_receive.material_id		
		 <!--  order by material_receive.receive_date -->
	</select>
	
  	<!-- 批量删除 -->
	<delete id="deleteBatch">
		DELETE
		FROM
			material_receive
		WHERE
			receive_id IN
		<foreach collection="array" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</delete>
	
	<!-- 修改备注-->
	<update id="updateNote" parameterType="com.megagao.production.ssm.domain.MaterialReceive" >
		UPDATE material_receive
		SET note = #{note}
		WHERE
			receive_id = #{receiveId,jdbcType=VARCHAR}
	</update>
	
    <!-- 依据ReceiveId查询 -->
    <select id="searchMaterialReceiveByReceiveId" parameterType="string" resultMap="BaseResultMap">
		SELECT
		    receive_id,
		    amount,
		    receive_date,
		    sender,
		    receiver,
		    material_receive.note,
			material.material_id
		FROM
			material_receive,
			material
		WHERE
			material.material_id=material_receive.material_id
	    AND receive_id like CONCAT('%',#{receiveId},'%' ) 	
	</select>
  
    <!-- 依据materialId查询 -->
    <select id="searchMaterialReceiveByMaterialId" parameterType="string" resultMap="BaseResultMap">
		SELECT
		    receive_id,
		    amount,
		    receive_date,
		    sender,
		    receiver,
		    material_receive.note,
			material.material_id
		FROM
			material_receive,
			material
		WHERE
			material.material_id=material_receive.material_id
	    AND material.material_id like CONCAT('%',#{materialId},'%' ) 	
	</select>
	
	
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    receive_id, material_id, amount, receive_date, sender, receiver, note
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.megagao.production.ssm.domain.MaterialReceiveExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from material_receive
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from material_receive
    where receive_id = #{receiveId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from material_receive
    where receive_id = #{receiveId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.megagao.production.ssm.domain.MaterialReceiveExample" >
    delete from material_receive
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.megagao.production.ssm.domain.MaterialReceive" >
    insert into material_receive (receive_id, material_id, amount,
      receive_date, sender, receiver, 
      note)
    values (#{receiveId,jdbcType=VARCHAR}, #{materialId,jdbcType=VARCHAR}, #{amount,jdbcType=INTEGER},
      #{receiveDate,jdbcType=TIMESTAMP}, #{sender,jdbcType=VARCHAR}, #{receiver,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.megagao.production.ssm.domain.MaterialReceive" >
    insert into material_receive
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="receiveId != null" >
        receive_id,
      </if>
      <if test="materialId != null" >
        material_id,
      </if>
      <if test="amount != null" >
          amount,
      </if>
      <if test="receiveDate != null" >
        receive_date,
      </if>
      <if test="sender != null" >
        sender,
      </if>
      <if test="receiver != null" >
        receiver,
      </if>
      <if test="note != null" >
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="receiveId != null" >
        #{receiveId,jdbcType=VARCHAR},
      </if>
      <if test="materialId != null" >
        #{materialId,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="receiveDate != null" >
        #{receiveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sender != null" >
        #{sender,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null" >
        #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.megagao.production.ssm.domain.MaterialReceiveExample" resultType="java.lang.Integer" >
    select count(*) from material_receive
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update material_receive
    <set >
      <if test="record.receiveId != null" >
        receive_id = #{record.receiveId,jdbcType=VARCHAR},
      </if>
      <if test="record.materialId != null" >
        material_id = #{record.materialId,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null" >
          amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.receiveDate != null" >
        receive_date = #{record.receiveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sender != null" >
        sender = #{record.sender,jdbcType=VARCHAR},
      </if>
      <if test="record.receiver != null" >
        receiver = #{record.receiver,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null" >
        note = #{record.note,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update material_receive
    set receive_id = #{record.receiveId,jdbcType=VARCHAR},
      material_id = #{record.materialId,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=INTEGER},
      receive_date = #{record.receiveDate,jdbcType=TIMESTAMP},
      sender = #{record.sender,jdbcType=VARCHAR},
      receiver = #{record.receiver,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.megagao.production.ssm.domain.MaterialReceive" >
    update material_receive
    <set >
      <if test="materialId != null" >
        material_id = #{materialId,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
          amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="receiveDate != null" >
        receive_date = #{receiveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sender != null" >
        sender = #{sender,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null" >
        receiver = #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where receive_id = #{receiveId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.megagao.production.ssm.domain.MaterialReceive" >
    update material_receive
    set material_id = #{materialId,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=INTEGER},
      receive_date = #{receiveDate,jdbcType=TIMESTAMP},
      sender = #{sender,jdbcType=VARCHAR},
      receiver = #{receiver,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR}
    where receive_id = #{receiveId,jdbcType=VARCHAR}
  </update>
</mapper>