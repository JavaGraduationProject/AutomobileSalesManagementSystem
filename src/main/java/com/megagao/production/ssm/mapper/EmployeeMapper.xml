<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.megagao.production.ssm.mapper.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="com.megagao.production.ssm.domain.vo.EmployeeVO" >
    <id column="emp_id" property="empId" jdbcType="VARCHAR" />
    <result column="emp_name" property="empName" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="id_code" property="idCode" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="join_date" property="joinDate" jdbcType="DATE" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="education" property="education" jdbcType="VARCHAR" />
    <result column="degree" property="degree" jdbcType="VARCHAR" />
    <result column="major" property="major" jdbcType="VARCHAR" />
    <result column="graduate_school" property="graduateSchool" jdbcType="VARCHAR" />
    <result column="education_form" property="educationForm" jdbcType="VARCHAR" />
    <association property="department" javaType="department">
		<result column="department_id" property="departmentId" jdbcType="VARCHAR" />
    	<result column="department_name" property="departmentName" jdbcType="VARCHAR" />
    	<result column="note" property="note" jdbcType="VARCHAR" />
	</association>
  </resultMap>
  
  <!-- 扩展的sql -->
  <!-- 查询所有记录 -->
	<select id="find" parameterType="employee" resultMap="BaseResultMap">
		SELECT
			emp_id,
			emp_name,
			sex,
			id_code,
			birthday,
			join_date,
			STATUS,
			education,
			degree,
			major,
			graduate_school,
			education_form,
			department_name,
			employee.department_id
		FROM
			employee
		LEFT JOIN department ON employee.department_id = department.department_id
		<if test="status!=null">
			and status=#{status}
		</if>
	</select>
	
	<!-- 查询所单个记录 -->
	<select id="selectSingleEmployee" parameterType="string" resultMap="BaseResultMap">
		SELECT
			emp_id,
			emp_name,
			sex,
			employee.department_id,
			department_name,
			id_code,
			education,
			degree,
			major,
			education_form,
			birthday,
			join_date,
			status
		FROM
			employee,
			department
		WHERE employee.department_id = department.department_id AND emp_id = #{empId}
	</select>
	
  <!-- 批量删除 -->
	<delete id="deleteBatch">
		DELETE
		FROM
			employee
		WHERE
			emp_id IN
		<foreach collection="array" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</delete>
	
	<select id="searchEmployeeByEmployeeId" parameterType="string" resultMap="BaseResultMap">
		SELECT
			emp_id,
			emp_name,
			sex,
			id_code,
			birthday,
			join_date,
			STATUS,
			education,
			degree,
			major,
			graduate_school,
			education_form,
			department_name,
			employee.department_id
		FROM
			employee
		LEFT JOIN department ON employee.department_id = department.department_id
		WHERE
			emp_id LIKE CONCAT(
				'%',
				#{employeeId},'%' ) 
	</select>
	
	<select id="searchEmployeeByEmployeeName" parameterType="string" resultMap="BaseResultMap">
		SELECT
			emp_id,
			emp_name,
			sex,
			id_code,
			birthday,
			join_date,
			STATUS,
			education,
			degree,
			major,
			graduate_school,
			education_form,
			department_name,
			employee.department_id
		FROM
			employee
		LEFT JOIN department ON employee.department_id = department.department_id
		WHERE
			emp_name LIKE CONCAT(
				'%',
				#{employeeName},'%' ) 
	</select>
	
	<select id="searchEmployeeByDepartmentName" parameterType="string" resultMap="BaseResultMap">
		SELECT
			emp_id,
			emp_name,
			sex,
			id_code,
			birthday,
			join_date,
			STATUS,
			education,
			degree,
			major,
			graduate_school,
			education_form,
			department_name,
			employee.department_id
		FROM
			employee
		LEFT JOIN department ON employee.department_id = department.department_id
		WHERE
			department_name LIKE CONCAT(
				'%',
				#{departmentName},'%' ) 
	</select>
	
	
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    emp_id, emp_name, sex, id_code, birthday, join_date, status, education, degree, major, 
    graduate_school, education_form, department_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.megagao.production.ssm.domain.EmployeeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from employee
    where emp_id = #{empId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from employee
    where emp_id = #{empId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.megagao.production.ssm.domain.EmployeeExample" >
    delete from employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.megagao.production.ssm.domain.Employee" >
    insert into employee (emp_id, emp_name, sex, 
      id_code, birthday, join_date, 
      status, education, degree, 
      major, graduate_school, education_form, 
      department_id)
    values (#{empId,jdbcType=VARCHAR}, #{empName,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, 
      #{idCode,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{joinDate,jdbcType=DATE}, 
      #{status,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR}, #{degree,jdbcType=VARCHAR}, 
      #{major,jdbcType=VARCHAR}, #{graduateSchool,jdbcType=VARCHAR}, #{educationForm,jdbcType=VARCHAR}, 
      #{departmentId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.megagao.production.ssm.domain.Employee" >
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="empId != null" >
        emp_id,
      </if>
      <if test="empName != null" >
        emp_name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="idCode != null" >
        id_code,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="joinDate != null" >
        join_date,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="education != null" >
        education,
      </if>
      <if test="degree != null" >
        degree,
      </if>
      <if test="major != null" >
        major,
      </if>
      <if test="graduateSchool != null" >
        graduate_school,
      </if>
      <if test="educationForm != null" >
        education_form,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="empId != null" >
        #{empId,jdbcType=VARCHAR},
      </if>
      <if test="empName != null" >
        #{empName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="idCode != null" >
        #{idCode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="joinDate != null" >
        #{joinDate,jdbcType=DATE},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="degree != null" >
        #{degree,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="graduateSchool != null" >
        #{graduateSchool,jdbcType=VARCHAR},
      </if>
      <if test="educationForm != null" >
        #{educationForm,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.megagao.production.ssm.domain.EmployeeExample" resultType="java.lang.Integer" >
    select count(*) from employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update employee
    <set >
      <if test="record.empId != null" >
        emp_id = #{record.empId,jdbcType=VARCHAR},
      </if>
      <if test="record.empName != null" >
        emp_name = #{record.empName,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.idCode != null" >
        id_code = #{record.idCode,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.joinDate != null" >
        join_date = #{record.joinDate,jdbcType=DATE},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.education != null" >
        education = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.degree != null" >
        degree = #{record.degree,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null" >
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.graduateSchool != null" >
        graduate_school = #{record.graduateSchool,jdbcType=VARCHAR},
      </if>
      <if test="record.educationForm != null" >
        education_form = #{record.educationForm,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentId != null" >
        department_id = #{record.departmentId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update employee
    set emp_id = #{record.empId,jdbcType=VARCHAR},
      emp_name = #{record.empName,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=CHAR},
      id_code = #{record.idCode,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=DATE},
      join_date = #{record.joinDate,jdbcType=DATE},
      status = #{record.status,jdbcType=VARCHAR},
      education = #{record.education,jdbcType=VARCHAR},
      degree = #{record.degree,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      graduate_school = #{record.graduateSchool,jdbcType=VARCHAR},
      education_form = #{record.educationForm,jdbcType=VARCHAR},
      department_id = #{record.departmentId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.megagao.production.ssm.domain.Employee" >
    update employee
    <set >
      <if test="empName != null" >
        emp_name = #{empName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="idCode != null" >
        id_code = #{idCode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="joinDate != null" >
        join_date = #{joinDate,jdbcType=DATE},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="degree != null" >
        degree = #{degree,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="graduateSchool != null" >
        graduate_school = #{graduateSchool,jdbcType=VARCHAR},
      </if>
      <if test="educationForm != null" >
        education_form = #{educationForm,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=VARCHAR},
      </if>
    </set>
    where emp_id = #{empId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.megagao.production.ssm.domain.Employee" >
    update employee
    set emp_name = #{empName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      id_code = #{idCode,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      join_date = #{joinDate,jdbcType=DATE},
      status = #{status,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      degree = #{degree,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      graduate_school = #{graduateSchool,jdbcType=VARCHAR},
      education_form = #{educationForm,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=VARCHAR}
    where emp_id = #{empId,jdbcType=VARCHAR}
  </update>
</mapper>