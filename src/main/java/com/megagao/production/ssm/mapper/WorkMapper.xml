<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.megagao.production.ssm.mapper.WorkMapper" >
  <resultMap id="BaseResultMap" type="com.megagao.production.ssm.domain.vo.WorkVO" >
    <id column="work_id" property="workId" jdbcType="VARCHAR" />
    <result column="process_number" property="processNumber" jdbcType="VARCHAR" />
    <result column="rating" property="rating" jdbcType="INTEGER" />
    <association property="product" javaType="product">
		<id column="product_id" property="productId" jdbcType="VARCHAR" />
	    <result column="product_name" property="productName" jdbcType="VARCHAR" />
	    <result column="product_type" property="productType" jdbcType="VARCHAR" />
	    <result column="image" property="image" jdbcType="VARCHAR" />
	    <result column="note" property="note" jdbcType="VARCHAR" />
	    <result column="status" property="status" jdbcType="INTEGER" />
	</association>
	<association property="process" javaType="process">
		<id column="process_id" property="processId" jdbcType="VARCHAR" />
	    <result column="technology_plan_id" property="technologyPlanId" jdbcType="VARCHAR" />
	    <result column="sequence" property="sequence" jdbcType="INTEGER" />
	    <result column="quota" property="quota" jdbcType="INTEGER" />
	</association>
	<association property="device" javaType="device">
		<id column="device_id" property="deviceId" jdbcType="VARCHAR" />
	    <result column="device_name" property="deviceName" jdbcType="VARCHAR" />
	    <result column="device_type_id" property="deviceTypeId" jdbcType="VARCHAR" />
	    <result column="device_status_id" property="deviceStatusId" jdbcType="VARCHAR" />
	    <result column="device_status" property="deviceStatus" jdbcType="VARCHAR" />
	    <result column="device_purchase_date" property="devicePurchaseDate" jdbcType="TIMESTAMP" />
	    <result column="device_purchase_price" property="devicePurchasePrice" jdbcType="DECIMAL" />
	    <result column="device_manufacture_date" property="deviceManufactureDate" jdbcType="TIMESTAMP" />
	    <result column="device_service_life" property="deviceServiceLife" jdbcType="TIMESTAMP" />
	    <result column="device_keeper_id" property="deviceKeeperId" jdbcType="VARCHAR" />
	    <result column="note" property="note" jdbcType="VARCHAR" />
	</association>
  </resultMap>
  
  <!-- 扩展的sql -->
  <!-- 查询所有记录 -->
	<select id="find" resultMap="BaseResultMap">
		SELECT
			work_id,
			process_number,
			work.product_id,
			product_name,
			work.process_id,
			work.device_id,
			device_name,
			rating
		FROM
			work
		LEFT JOIN product ON work.product_id = product.product_id
		LEFT JOIN device ON work.device_id = device.device_id
		LEFT JOIN process ON work.process_id = process.process_id
	</select>
	
  <!-- 批量删除 -->
	<delete id="deleteBatch">
		DELETE
		FROM
			work
		WHERE
			work_id IN
		<foreach collection="array" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</delete>
	
	<select id="searchWorkByWorkId" parameterType="string" resultMap="BaseResultMap">
		SELECT
			work_id,
			process_number,
			work.product_id,
			product_name,
			work.process_id,
			work.device_id,
			device_name,
			rating
		FROM
			work
		LEFT JOIN product ON work.product_id = product.product_id
		LEFT JOIN device ON work.device_id = device.device_id
		LEFT JOIN process ON work.process_id = process.process_id
		WHERE
			work_id LIKE CONCAT(
				'%',
				#{workId},'%' ) 
	</select>
	
	<select id="searchWorkByWorkProduct" parameterType="string" resultMap="BaseResultMap">
		SELECT
			work_id,
			process_number,
			work.product_id,
			product_name,
			work.process_id,
			work.device_id,
			device_name,
			rating
		FROM
			work
		LEFT JOIN product ON work.product_id = product.product_id
		LEFT JOIN device ON work.device_id = device.device_id
		LEFT JOIN process ON work.process_id = process.process_id
		WHERE
			product_name LIKE CONCAT(
				'%',
				#{productName},'%' ) 
	</select>
	
	<select id="searchWorkByWorkDevice" parameterType="string" resultMap="BaseResultMap">
		SELECT
			work_id,
			process_number,
			work.product_id,
			product_name,
			work.process_id,
			work.device_id,
			device_name,
			rating
		FROM
			work
		LEFT JOIN product ON work.product_id = product.product_id
		LEFT JOIN device ON work.device_id = device.device_id
		LEFT JOIN process ON work.process_id = process.process_id
		WHERE
			device_name LIKE CONCAT(
				'%',
				#{deviceName},'%' ) 
	</select>
	
	<select id="searchWorkByWorkProcess" parameterType="string" resultMap="BaseResultMap">
		SELECT
			work_id,
			process_number,
			work.product_id,
			product_name,
			work.process_id,
			work.device_id,
			device_name,
			rating
		FROM
			work
		LEFT JOIN product ON work.product_id = product.product_id
		LEFT JOIN device ON work.device_id = device.device_id
		LEFT JOIN process ON work.process_id = process.process_id
		WHERE
			work.process_id LIKE CONCAT(
				'%',
				#{processId},'%' ) 
	</select>
	
	
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    work_id, process_number, product_id, process_id, device_id, rating
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.megagao.production.ssm.domain.WorkExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from work
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from work
    where work_id = #{workId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from work
    where work_id = #{workId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.megagao.production.ssm.domain.WorkExample" >
    delete from work
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.megagao.production.ssm.domain.Work" >
    insert into work (work_id, process_number, product_id, 
      process_id, device_id, rating
      )
    values (#{workId,jdbcType=VARCHAR}, #{processNumber,jdbcType=VARCHAR}, #{productId,jdbcType=VARCHAR}, 
      #{processId,jdbcType=VARCHAR}, #{deviceId,jdbcType=VARCHAR}, #{rating,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.megagao.production.ssm.domain.Work" >
    insert into work
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="workId != null" >
        work_id,
      </if>
      <if test="processNumber != null" >
        process_number,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="processId != null" >
        process_id,
      </if>
      <if test="deviceId != null" >
        device_id,
      </if>
      <if test="rating != null" >
        rating,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="workId != null" >
        #{workId,jdbcType=VARCHAR},
      </if>
      <if test="processNumber != null" >
        #{processNumber,jdbcType=VARCHAR},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="processId != null" >
        #{processId,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null" >
        #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="rating != null" >
        #{rating,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.megagao.production.ssm.domain.WorkExample" resultType="java.lang.Integer" >
    select count(*) from work
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update work
    <set >
      <if test="record.workId != null" >
        work_id = #{record.workId,jdbcType=VARCHAR},
      </if>
      <if test="record.processNumber != null" >
        process_number = #{record.processNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=VARCHAR},
      </if>
      <if test="record.processId != null" >
        process_id = #{record.processId,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceId != null" >
        device_id = #{record.deviceId,jdbcType=VARCHAR},
      </if>
      <if test="record.rating != null" >
        rating = #{record.rating,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update work
    set work_id = #{record.workId,jdbcType=VARCHAR},
      process_number = #{record.processNumber,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=VARCHAR},
      process_id = #{record.processId,jdbcType=VARCHAR},
      device_id = #{record.deviceId,jdbcType=VARCHAR},
      rating = #{record.rating,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.megagao.production.ssm.domain.Work" >
    update work
    <set >
      <if test="processNumber != null" >
        process_number = #{processNumber,jdbcType=VARCHAR},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=VARCHAR},
      </if>
      <if test="processId != null" >
        process_id = #{processId,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null" >
        device_id = #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="rating != null" >
        rating = #{rating,jdbcType=INTEGER},
      </if>
    </set>
    where work_id = #{workId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.megagao.production.ssm.domain.Work" >
    update work
    set process_number = #{processNumber,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=VARCHAR},
      process_id = #{processId,jdbcType=VARCHAR},
      device_id = #{deviceId,jdbcType=VARCHAR},
      rating = #{rating,jdbcType=INTEGER}
    where work_id = #{workId,jdbcType=VARCHAR}
  </update>
</mapper>